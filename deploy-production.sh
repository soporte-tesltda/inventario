#!/bin/bash

# ========================================================================
# SCRIPT DE DESPLIEGUE A PRODUCCI√ìN - INVENTARIO TES LTDA
# ========================================================================
# Este script automatiza el proceso de despliegue y verifica que 
# las im√°genes funcionen correctamente en producci√≥n

echo "üöÄ Iniciando despliegue a producci√≥n..."

# ========================================================================
# 1. VERIFICACIONES PREVIAS
# ========================================================================
echo ""
echo "1Ô∏è‚É£ Verificando configuraci√≥n..."

# Verificar que existe .env de producci√≥n
if [ ! -f .env ]; then
    echo "‚ùå Error: No existe archivo .env"
    echo "   Copia .env.production.example como .env y config√∫ralo"
    exit 1
fi

# Verificar APP_ENV
if grep -q "APP_ENV=local" .env; then
    echo "‚ö†Ô∏è  Advertencia: APP_ENV est√° en 'local', deber√≠a ser 'production'"
fi

# Verificar APP_DEBUG
if grep -q "APP_DEBUG=true" .env; then
    echo "‚ö†Ô∏è  Advertencia: APP_DEBUG est√° en 'true', deber√≠a ser 'false'"
fi

# Verificar APP_URL
if grep -q "127.0.0.1\|localhost" .env; then
    echo "‚ö†Ô∏è  Advertencia: APP_URL contiene localhost, actualiza al dominio real"
fi

# ========================================================================
# 2. INSTALACI√ìN Y OPTIMIZACI√ìN
# ========================================================================
echo ""
echo "2Ô∏è‚É£ Instalando dependencias y optimizando..."

# Instalar dependencias de producci√≥n
composer install --no-dev --optimize-autoloader

# Optimizaciones de Laravel
php artisan config:cache
php artisan route:cache
php artisan view:cache

# ========================================================================
# 3. CONFIGURACI√ìN DE ALMACENAMIENTO E IM√ÅGENES
# ========================================================================
echo ""
echo "3Ô∏è‚É£ Configurando almacenamiento de im√°genes..."

# Crear enlace simb√≥lico para im√°genes
if [ ! -L public/storage ]; then
    echo "   Creando enlace simb√≥lico..."
    php artisan storage:link
else
    echo "   ‚úÖ Enlace simb√≥lico ya existe"
fi

# Verificar permisos en Linux/Unix
if [ "$(uname)" != "Darwin" ] && [ "$(uname)" != "MINGW64_NT-10.0-19045" ]; then
    echo "   Configurando permisos..."
    chmod -R 755 storage/
    chmod -R 755 public/storage/
    chmod -R 775 storage/app/public/
fi

# Crear directorios necesarios
mkdir -p storage/app/public/products
mkdir -p storage/app/public/contracts

# Extraer im√°genes existentes si existe el backup
if [ -f "storage/app/public/imagenes-productos-backup.zip" ]; then
    echo "   üì¶ Extrayendo im√°genes existentes..."
    cd storage/app/public
    unzip -o imagenes-productos-backup.zip
    cd ../../..
    echo "   ‚úÖ Im√°genes existentes restauradas (1,373 im√°genes)"
else
    echo "   ‚ÑπÔ∏è  No se encontr√≥ backup de im√°genes existentes"
fi

echo "   ‚úÖ Configuraci√≥n de almacenamiento completada"

# ========================================================================
# 4. BASE DE DATOS Y SESIONES
# ========================================================================
echo ""
echo "4Ô∏è‚É£ Configurando base de datos y sesiones..."

# Ejecutar migraciones
php artisan migrate --force

# Configurar sesiones para producci√≥n
php artisan session:fix --production

# Opcional: Ejecutar seeders solo si es primera instalaci√≥n
read -p "¬øEs la primera instalaci√≥n? (y/N): " -n 1 -r
echo
if [[ $REPLY =~ ^[Yy]$ ]]; then
    php artisan db:seed --force
fi

# ========================================================================
# 5. VERIFICACIONES POST-DESPLIEGUE
# ========================================================================
echo ""
echo "5Ô∏è‚É£ Verificando configuraci√≥n de im√°genes..."

# Ejecutar diagn√≥stico de im√°genes
php artisan products:production-check

# ========================================================================
# 6. OPTIMIZACIONES ADICIONALES
# ========================================================================
echo ""
echo "6Ô∏è‚É£ Aplicando optimizaciones finales..."

# Limpiar cach√© de aplicaci√≥n
php artisan cache:clear
php artisan config:clear

# Regenerar cach√© de producci√≥n
php artisan config:cache
php artisan route:cache
php artisan view:cache

# ========================================================================
# 7. CONFIGURACI√ìN DEL SERVIDOR WEB
# ========================================================================
echo ""
echo "7Ô∏è‚É£ Configuraci√≥n del servidor web..."
echo "   üìã Aseg√∫rate de configurar tu servidor web para:"
echo "   ‚Ä¢ Servir archivos est√°ticos desde public/storage/"
echo "   ‚Ä¢ Configurar HTTPS si es necesario"
echo "   ‚Ä¢ Configurar compresi√≥n GZIP para im√°genes"
echo "   ‚Ä¢ Configurar cach√© de navegador para archivos est√°ticos"

# ========================================================================
# 8. VERIFICACI√ìN FINAL
# ========================================================================
echo ""
echo "8Ô∏è‚É£ Verificaci√≥n final..."

# Verificar que las rutas principales funcionen
echo "   Verificando aplicaci√≥n..."
php artisan route:list | grep -q "inventario" && echo "   ‚úÖ Rutas configuradas correctamente"

# Verificar configuraci√≥n de almacenamiento
if [ -d "public/storage/products" ]; then
    echo "   ‚úÖ Directorio de im√°genes accesible"
else
    echo "   ‚ùå Error: Directorio de im√°genes no accesible"
fi

echo ""
echo "üéâ ¬°Despliegue completado!"
echo ""
echo "üìã CHECKLIST POST-DESPLIEGUE:"
echo "   ‚ñ° Verificar que APP_URL apunte al dominio correcto"
echo "   ‚ñ° Probar subir una imagen de producto"
echo "   ‚ñ° Verificar que las im√°genes se muestren en la lista"
echo "   ‚ñ° Configurar backups autom√°ticos"
echo "   ‚ñ° Configurar monitoreo de logs"
echo "   ‚ñ° Documentar credenciales de acceso"
echo ""
echo "üîó Acceso a la aplicaci√≥n:"
grep "APP_URL" .env | cut -d'=' -f2 | sed 's/^/   /'
echo "/inventario"
echo ""
echo "üìû Soporte: TES LTDA"
